---
import { urlFor } from '../utils/image';
import { formatDate } from '../utils/dateUtils';
import { getCategory, type Post } from '../utils/sanity';
import heroImage from '../assets/images/Blog-Hero.png';
import heroImageMobile from '../assets/images/Blog-Hero-SM.png';
import { Image } from 'astro:assets';
import CustomImage from './CustomImage.astro';
import CategoryTag from './CategoryTag.astro';
import category from '../../schema/category';

interface Props {
    post: Post;
}

const { post } = Astro.props satisfies Props;

let categoryCardData: any = {category: '', bgColor: ''};

categoryCardData.category = post.category.title;

switch(categoryCardData.category.toLowerCase()){
    case 'news':
        categoryCardData.bgColor = 'bg-brand-purple';
        break;
    case 'article':
        categoryCardData.bgColor = 'bg-red-500';
        break;
    case 'tips':
        categoryCardData.bgColor = 'bg-green-500';
        break;
    default:
        categoryCardData.bgColor = 'bg-brand-black';
}
---
<article class="flex w-full h-full max-w-[327px] flex-col items-center duration-200 hover:scale-105  justify-center shadow-md md:max-w-[380px]">
    <a class="w-full h-full" href=`/blog/${post.category.slug.current}/${post.slug.current}`>
        {
            post.cardImageMobile && post.cardImageDesktop ? (
                    <CustomImage
                        mobileImgUrl={urlFor(post.cardImageMobile)?.url() ?? heroImage}
                        desktopImgUrl={urlFor(post.cardImageDesktop)?.url() ?? heroImageMobile}
                        imageSizes={[
                            [327, 303],
                            [380, 303],
                        ]}
                        alt=`${post.title} Post Image`
                        classList=''
                    />
            ) : (
                    <CustomImage
                        mobileImgUrl={heroImage}
                        desktopImgUrl={heroImageMobile}
                        imageSizes={[
                            [327, 303],
                            [380, 303],
                        ]}
                        alt=`${post.title} Post Image`
                        classList=''
                    />
            )
        }
        <div class='p-4 flex flex-col w-full space-y-4'>
            <CategoryTag category={categoryCardData.category} bgColor={categoryCardData.bgColor} />
            <h2 class='text-lg text-left text-brand-black font-bold'>{post.title}</h2>
            <p class='text-brand-black text-left'>{post.description}</p>
            <p class='text-brand-gray text-left'>{formatDate(post._createdAt)}</p>
        </div>
    </a>
</article>
